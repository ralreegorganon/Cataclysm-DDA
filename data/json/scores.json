[
  {
    "id": "avatar_id",
    "type": "event_statistic",
    "stat_type": "unique_value",
    "event_type": "game_start",
    "field": "avatar_id"
  },
  {
    "id": "avatar_kills",
    "type": "event_transformation",
    "event_type": "character_kills_monster",
    "value_constraints": { "killer": { "equals_statistic": "avatar_id" } },
    "drop_fields": [ "killer" ]
  },
  {
    "id": "avatar_species_kills",
    "type": "event_transformation",
    "event_transformation": "avatar_kills",
    "new_fields": { "species": { "species_of_monster": "victim_type" } },
    "drop_fields": [ "victim_type" ]
  },
  {
    "id": "avatar_zombie_kills",
    "type": "event_transformation",
    "event_transformation": "avatar_species_kills",
    "value_constraints": { "species": { "equals": "ZOMBIE" } }
  },
  {
    "id": "num_avatar_kills",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "avatar_kills"
  },
  {
    "id": "num_avatar_zombie_kills",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "avatar_zombie_kills",
    "description": "zombies killed"
  },
  {
    "id": "score_kills",
    "type": "score",
    "description": "Monsters killed: %s",
    "statistic": "num_avatar_kills"
  },
  {
    "id": "achievement_kill_zombie",
    "type": "achievement",
    "description": "One down, billions to go\u2026",
    "requirements": [ { "event_statistic": "num_avatar_zombie_kills", "is": ">=", "target": 1 } ]
  },
  {
    "id": "moves_expand_pre_move_mode",
    "type": "event_transformation",
    "event_type": "avatar_moves",
    "new_fields": { "swimming": { "terrain_to_swimming": "terrain" }, "mounted": { "mount_to_mounted": "mount" } }
  },
  {
    "id": "moves_walked",
    "type": "event_transformation",
    "event_transformation": "moves_expand_pre_move_mode",
    "value_constraints": { "movement_mode": { "equals": "walk" }, "mounted": { "equals": false }, "swimming": { "equals": false } }
  },
  {
    "id": "moves_mounted",
    "type": "event_transformation",
    "event_transformation": "moves_expand_pre_move_mode",
    "value_constraints": { "mounted": { "equals": true } }
  },
  {
    "id": "moves_ran",
    "type": "event_transformation",
    "event_transformation": "moves_expand_pre_move_mode",
    "value_constraints": { "movement_mode": { "equals": "run" }, "mounted": { "equals": false }, "swimming": { "equals": false } }
  },
  {
    "id": "moves_crouched",
    "type": "event_transformation",
    "event_transformation": "moves_expand_pre_move_mode",
    "value_constraints": { "movement_mode": { "equals": "crouch" }, "mounted": { "equals": false }, "swimming": { "equals": false } }
  },
  {
    "id": "moves_swam",
    "type": "event_transformation",
    "event_transformation": "moves_expand_pre_move_mode",
    "value_constraints": { "mounted": { "equals": false }, "swimming": { "equals": true } }
  },
  {
    "id": "moves_swam_underwater",
    "type": "event_transformation",
    "event_transformation": "moves_swam",
    "value_constraints": { "underwater": { "equals": true } }
  },
  {
    "id": "num_moves",
    "type": "event_statistic",
    "stat_type": "count",
    "event_type": "avatar_moves"
  },
  {
    "id": "num_moves_walked",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_walked",
    "description": "squares walked"
  },
  {
    "id": "num_moves_mounted",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_mounted",
    "description": "squares rode a mount"
  },
  {
    "id": "num_moves_ran",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_ran",
    "description": "squares ran"
  },
  {
    "id": "num_moves_crouched",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_crouched",
    "description": "squares crouched"
  },
  {
    "id": "num_moves_swam",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_swam",
    "description": "squares swam"
  },
  {
    "id": "num_moves_swam_underwater",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "moves_swam_underwater",
    "description": "squares swam underwater"
  },
  {
    "id": "score_moves",
    "type": "score",
    "description": "Moved: %s squares",
    "statistic": "num_moves"
  },
  {
    "id": "score_walked",
    "type": "score",
    "description": "Walked: %s squares",
    "statistic": "num_moves_walked"
  },
  {
    "id": "score_mounted",
    "type": "score",
    "description": "Rode mount: %s squares",
    "statistic": "num_moves_mounted"
  },
  {
    "id": "score_ran",
    "type": "score",
    "description": "Ran: %s squares",
    "statistic": "num_moves_ran"
  },
  {
    "id": "score_crouched",
    "type": "score",
    "description": "Crouched: %s squares",
    "statistic": "num_moves_crouched"
  },
  {
    "id": "score_swam",
    "type": "score",
    "description": "Swam: %s squares",
    "statistic": "num_moves_swam"
  },
  {
    "id": "score_swam_underwater",
    "type": "score",
    "description": "Swam underwater: %s squares",
    "statistic": "num_moves_swam_underwater"
  },
  {
    "id": "achievement_swim_short_distance",
    "type": "achievement",
    "description": "Swimming Merit Badge",
    "requirements": [ { "event_statistic": "num_moves_swam", "is": ">=", "target": 10000 } ]
  },
  {
    "id": "achievement_swim_short_distance_underwater",
    "type": "achievement",
    "description": "Finding Nemo",
    "requirements": [ { "event_statistic": "num_moves_swam_underwater", "is": ">=", "target": 1000 } ]
  },
  {
    "id": "avatar_takes_damage",
    "type": "event_transformation",
    "event_type": "character_takes_damage",
    "value_constraints": { "character": { "equals_statistic": "avatar_id" } }
  },
  {
    "id": "avatar_damage_taken",
    "type": "event_statistic",
    "stat_type": "total",
    "field": "damage",
    "event_transformation": "avatar_takes_damage"
  },
  {
    "id": "score_damage_taken",
    "type": "score",
    "description": "Damage taken: %s damage",
    "statistic": "avatar_damage_taken"
  },
  {
    "id": "avatar_heals_damage",
    "type": "event_transformation",
    "event_type": "character_heals_damage",
    "value_constraints": { "character": { "equals_statistic": "avatar_id" } }
  },
  {
    "id": "avatar_damage_healed",
    "type": "event_statistic",
    "stat_type": "total",
    "field": "damage",
    "event_transformation": "avatar_heals_damage"
  },
  {
    "id": "score_damage_healed",
    "type": "score",
    "description": "Damage healed: %s damage",
    "statistic": "avatar_damage_healed"
  },
  {
    "id": "avatar_headshots",
    "type": "event_transformation",
    "event_type": "character_gets_headshot",
    "value_constraints": { "character": { "equals_statistic": "avatar_id" } }
  },
  {
    "id": "avatar_num_headshots",
    "type": "event_statistic",
    "stat_type": "count",
    "event_transformation": "avatar_headshots"
  },
  {
    "id": "score_headshots",
    "type": "score",
    "description": { "ctxt": "score description", "str": "Headshots: %s" },
    "statistic": "avatar_num_headshots"
  }
]
